#!pip install evaluate
#!pip install seqeval
from datasets import Dataset, DatasetDict
from transformers import (
    AutoTokenizer, AutoModelForTokenClassification,
    DataCollatorForTokenClassification, TrainingArguments, Trainer,
    EarlyStoppingCallback
)
import numpy as np
import evaluate
import os
from sklearn.model_selection import train_test_split
import torch.nn as nn
from evaluate import load
seqeval_metric = load("seqeval")

from huggingface_hub import login
#login(token="___")- add token

# Disable Weights & Biases logging
os.environ["WANDB_DISABLED"] = "true"
torch.cuda.empty_cache()

# 1. Sample Dataset
examples = [
    {
        "tokens": ["My", "name", "is", "Rajesh", "Kumar"],
        "ner_tags": ["O", "O", "O", "B-NAME", "I-NAME"]
    },
    {
        "tokens": ["Call", "me", "at", "9876543210"],
        "ner_tags": ["O", "O", "O", "B-PHONE"]
    },
    {
        "tokens": ["Dr", "Priya", "Sharma", "lives", "at", "123", "MG", "Road", "Bangalore"],
        "ner_tags": ["O", "B-NAME", "I-NAME", "O", "O", "B-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS"]
    },
    {
        "tokens": ["Contact", "Ananya", "Patel", "via", "email", "ananya.patel@gmail.com"],
        "ner_tags": ["O", "B-NAME", "I-NAME", "O", "O", "B-EMAIL"]
    },
    {
        "tokens": ["Patient", "Suresh", "Reddy", "DOB", "15/08/1985", "Phone", "9123456789"],
        "ner_tags": ["O", "B-NAME", "I-NAME", "O", "B-DOB", "O", "B-PHONE"]
    },
    {
        "tokens": ["My", "Aadhaar", "number", "is", "1234", "5678", "9012"],
        "ner_tags": ["O", "O", "O", "O", "B-AADHAAR", "I-AADHAAR", "I-AADHAAR"]
    },
    {
        "tokens": ["Lakshmi", "Nair", "resides", "at", "45", "Brigade", "Road", "near", "Commercial", "Street", "Bangalore", "560001"],
        "ner_tags": ["B-NAME", "I-NAME", "O", "O", "B-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS"]
    },
    {
        "tokens": ["Email", "me", "at", "rajesh.kumar@hotmail.com", "or", "call", "9876543210"],
        "ner_tags": ["O", "O", "O", "B-EMAIL", "O", "O", "B-PHONE"]
    },
    {
        "tokens": ["Born", "on", "22", "December", "1990", "in", "Chennai"],
        "ner_tags": ["O", "O", "B-DOB", "I-DOB", "I-DOB", "O", "O"]
    },
    {
        "tokens": ["Mr", "Arun", "Kumar", "Agarwal", "mobile", "number", "8765432109"],
        "ner_tags": ["O", "B-NAME", "I-NAME", "I-NAME", "O", "O", "B-PHONE"]
    },
    {
        "tokens": ["Address", "Plot", "no", "567", "Koramangala", "5th", "Block", "Bangalore", "Karnataka", "560034"],
        "ner_tags": ["O", "B-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS"]
    },
    {
        "tokens": ["Kavitha", "Menon", "DOB", "03/07/1975", "Aadhaar", "5678", "9012", "3456"],
        "ner_tags": ["B-NAME", "I-NAME", "O", "B-DOB", "O", "B-AADHAAR", "I-AADHAAR", "I-AADHAAR"]
    },
    {
        "tokens": ["Please", "contact", "Dr", "Mohan", "Rao", "at", "mohan.rao@apollo.com"],
        "ner_tags": ["O", "O", "O", "B-NAME", "I-NAME", "O", "B-EMAIL"]
    },
    {
        "tokens": ["Residence", "address", "Flat", "2B", "Golden", "Palms", "Whitefield", "Bangalore", "560066"],
        "ner_tags": ["O", "O", "B-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS"]
    },
    {
        "tokens": ["Sandhya", "Puvvala", "born", "12th", "June", "1979", "contact", "9611827350"],
        "ner_tags": ["B-NAME", "I-NAME", "O", "B-DOB", "I-DOB", "I-DOB", "O", "B-PHONE"]
    },
    {
        "tokens": ["My", "email", "is", "priya.sharma@outlook.com", "and", "phone", "9987654321"],
        "ner_tags": ["O", "O", "O", "B-EMAIL", "O", "O", "B-PHONE"]
    },
    {
        "tokens": ["Patient", "Ramesh", "Gupta", "lives", "at", "House", "No", "89", "Jayanagar", "4th", "Block", "Bangalore"],
        "ner_tags": ["O", "B-NAME", "I-NAME", "O", "O", "B-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS"]
    },
    {
        "tokens": ["Aadhaar", "ID", "9876", "5432", "1098", "DOB", "25/11/1988"],
        "ner_tags": ["O", "O", "B-AADHAAR", "I-AADHAAR", "I-AADHAAR", "O", "B-DOB"]
    },
    {
        "tokens": ["Meera", "Singh", "email", "meera.singh@yahoo.in", "mobile", "8899776655"],
        "ner_tags": ["B-NAME", "I-NAME", "O", "B-EMAIL", "O", "B-PHONE"]
    },
    {
        "tokens": ["Address", "No", "234", "HSR", "Layout", "Sector", "2", "Bangalore", "560102"],
        "ner_tags": ["O", "O", "B-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS"]
    },
    {
        "tokens": ["Name", "Vikram", "Khanna", "Date", "of", "Birth", "18", "March", "1982"],
        "ner_tags": ["O", "B-NAME", "I-NAME", "O", "O", "O", "B-DOB", "I-DOB", "I-DOB"]
    },
    {
        "tokens": ["Contact", "details", "Phone", "7766554433", "Email", "vikram@gmail.com"],
        "ner_tags": ["O", "O", "O", "B-PHONE", "O", "B-EMAIL"]
    },
    {
        "tokens": ["Mrs", "Deepa", "Krishnan", "residing", "at", "Apartment", "5C", "Electronic", "City", "Phase", "1", "Bangalore"],
        "ner_tags": ["O", "B-NAME", "I-NAME", "O", "O", "B-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS"]
    },
    {
        "tokens": ["Aadhaar", "number", "2468", "1357", "9024", "Phone", "9988776655"],
        "ner_tags": ["O", "O", "B-AADHAAR", "I-AADHAAR", "I-AADHAAR", "O", "B-PHONE"]
    },
    {
        "tokens": ["Born", "on", "05", "September", "1992", "Name", "is", "Arjun", "Patel"],
        "ner_tags": ["O", "O", "B-DOB", "I-DOB", "I-DOB", "O", "O", "B-NAME", "I-NAME"]
    },
    {
        "tokens": ["Email", "address", "deepa.krishnan@rediffmail.com", "mobile", "8877665544"],
        "ner_tags": ["O", "O", "B-EMAIL", "O", "B-PHONE"]
    },
    {
        "tokens": ["Lives", "at", "Villa", "12", "Prestige", "Lakeside", "Habitat", "Varthur", "Bangalore", "560087"],
        "ner_tags": ["O", "O", "B-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS"]
    },
    {
        "tokens": ["Patient", "Sanjay", "Mehta", "DOB", "28/02/1976", "Aadhaar", "3579", "2468", "1024"],
        "ner_tags": ["O", "B-NAME", "I-NAME", "O", "B-DOB", "O", "B-AADHAAR", "I-AADHAAR", "I-AADHAAR"]
    },
    {
        "tokens": ["Neha", "Agarwal", "contact", "neha.agarwal@hotmail.com", "phone", "9876501234"],
        "ner_tags": ["B-NAME", "I-NAME", "O", "B-EMAIL", "O", "B-PHONE"]
    },
    {
        "tokens": ["Address", "is", "Door", "No", "456", "Indiranagar", "12th", "Main", "Bangalore", "560038"],
        "ner_tags": ["O", "O", "B-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS"]
    },
    {
        "tokens": ["Date", "of", "birth", "14", "January", "1987", "Name", "Rohit", "Sharma"],
        "ner_tags": ["O", "O", "O", "B-DOB", "I-DOB", "I-DOB", "O", "B-NAME", "I-NAME"]
    },
    {
        "tokens": ["Mobile", "7788990011", "Aadhaar", "6543", "2109", "8765"],
        "ner_tags": ["O", "B-PHONE", "O", "B-AADHAAR", "I-AADHAAR", "I-AADHAAR"]
    },
    {
        "tokens": ["Dr", "Ravi", "Kumar", "Reddy", "email", "ravi.reddy@manipal.com"],
        "ner_tags": ["O", "B-NAME", "I-NAME", "I-NAME", "O", "B-EMAIL"]
    },
    {
        "tokens": ["Residence", "Flat", "7A", "Brigade", "Metropolis", "Mahadevapura", "Bangalore", "560048"],
        "ner_tags": ["O", "B-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS"]
    },
    {
        "tokens": ["Born", "21", "October", "1983", "Contact", "8866445522"],
        "ner_tags": ["O", "B-DOB", "I-DOB", "I-DOB", "O", "B-PHONE"]
    },
    {
        "tokens": ["Sunita", "Jain", "Aadhaar", "ID", "7890", "1234", "5678", "Email", "sunita@gmail.com"],
        "ner_tags": ["B-NAME", "I-NAME", "O", "O", "B-AADHAAR", "I-AADHAAR", "I-AADHAAR", "O", "B-EMAIL"]
    },
    {
        "tokens": ["Address", "Plot", "78", "RT", "Nagar", "Near", "ISKCON", "Temple", "Bangalore", "560032"],
        "ner_tags": ["O", "B-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS"]
    },
    {
        "tokens": ["Name", "Amit", "Tiwari", "Phone", "9988001122", "DOB", "07/04/1991"],
        "ner_tags": ["O", "B-NAME", "I-NAME", "O", "B-PHONE", "O", "B-DOB"]
    },
    {
        "tokens": ["Email", "amit.tiwari@yahoo.com", "Aadhaar", "4567", "8901", "2345"],
        "ner_tags": ["O", "B-EMAIL", "O", "B-AADHAAR", "I-AADHAAR", "I-AADHAAR"]
    },
    {
        "tokens": ["Lives", "in", "House", "No", "321", "Basavanagudi", "Bull", "Temple", "Road", "Bangalore", "560004"],
        "ner_tags": ["O", "O", "B-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS"]
    },
    {
        "tokens": ["Patient", "Pooja", "Malhotra", "born", "on", "30", "May", "1986"],
        "ner_tags": ["O", "B-NAME", "I-NAME", "O", "O", "B-DOB", "I-DOB", "I-DOB"]
    },
    {
        "tokens": ["Contact", "at", "pooja.malhotra@rediff.com", "or", "9654321087"],
        "ner_tags": ["O", "O", "B-EMAIL", "O", "B-PHONE"]
    },
    {
        "tokens": ["Address", "Apartment", "9B", "Sobha", "City", "Thanisandra", "Bangalore", "560077"],
        "ner_tags": ["O", "B-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS", "I-ADDRESS"]
    },
    {
        "tokens": ["Aadhaar", "8765", "4321", "0987", "Date", "of", "Birth", "16/09/1980"],
        "ner_tags": ["O", "B-AADHAAR", "I-AADHAAR", "I-AADHAAR", "O", "O", "O", "B-DOB"]
    },
    {
        "tokens": ["Mr", "Kiran", "Bhat", "mobile", "7799881122", "email", "kiran@outlook.com"],
        "ner_tags": ["O", "B-NAME", "I-NAME", "O", "B-PHONE", "O", "B-EMAIL"]
    }
]

dataset = Dataset.from_list(examples)
train_test = dataset.train_test_split(test_size=0.2, seed=42)
dataset_dict = DatasetDict({
    'train': train_test['train'],
    'validation': train_test['test']
})

# 2. Custom Labels
label_list = [
    "O", 
    "B-NAME", "I-NAME", 
    "B-ADDRESS", "I-ADDRESS", 
    "B-PHONE", "I-PHONE",
    "B-EMAIL", "I-EMAIL",
    "B-AADHAAR", "I-AADHAAR",
    "B-DOB", "I-DOB"
]

label_to_id = {label: i for i, label in enumerate(label_list)}
id_to_label = {i: label for label, i in label_to_id.items()}

from transformers import pipeline
from transformers import AutoModelForTokenClassification, AutoTokenizer, pipeline, AutoConfig

model_checkpoint = "ai4bharat/IndicNER"
config = AutoConfig.from_pretrained(model_checkpoint)
tokenizer = AutoTokenizer.from_pretrained(model_checkpoint)
model = AutoModelForTokenClassification.from_pretrained(model_checkpoint, config=config)
model.classifier = nn.Linear(model.config.hidden_size, len(label_list))  # Replace head
model.num_labels = len(label_list)


# 4. Tokenize and align labels
def tokenize_and_align_labels(examples):
    tokenized_inputs = tokenizer(
        examples["tokens"],
        truncation=True,
        is_split_into_words=True,
        padding=True
    )

    labels = []
    for i, label in enumerate(examples["ner_tags"]):
        word_ids = tokenized_inputs.word_ids(batch_index=i)
        label_ids = []
        previous_word_idx = None
        for word_idx in word_ids:
            if word_idx is None:
                label_ids.append(-100)
            elif word_idx != previous_word_idx:
                label_ids.append(label_to_id[label[word_idx]])
            else:
                label_name = label[word_idx]
                if label_name.startswith("B-"):
                    label_name = label_name.replace("B-", "I-")
                label_ids.append(label_to_id.get(label_name, label_to_id["O"]))
            previous_word_idx = word_idx
        labels.append(label_ids)

    tokenized_inputs["labels"] = labels
    return tokenized_inputs

# 5. Tokenize dataset
tokenized_dataset = dataset_dict.map(tokenize_and_align_labels, batched=True)
metric = evaluate.load("seqeval")

def compute_metrics(p):
    predictions, labels = p
    predictions = np.argmax(predictions, axis=2)

    true_labels = [[label_list[l] for l in label if l != -100] for label in labels]
    true_preds = [
        [label_list[p] for (p, l) in zip(pred, label) if l != -100]
        for pred, label in zip(predictions, labels)
    ]

    results = seqeval_metric.compute(predictions=true_preds, references=true_labels)

    # Only return overall scalars to Trainer
    return {
        "overall_precision": results["overall_precision"],
        "overall_recall": results["overall_recall"],
        "overall_f1": results["overall_f1"],
        "overall_accuracy": results["overall_accuracy"],
    }

# 6. Training setup
training_args = TrainingArguments(
    output_dir="./pii-ner-indic",
    eval_strategy="epoch",
    logging_strategy="epoch",
    save_strategy="epoch",
    logging_dir="./logs",
    report_to=["tensorboard"],
    load_best_model_at_end=True,
    metric_for_best_model="eval_overall_f1",
    greater_is_better=True,
    per_device_train_batch_size=16,
    per_device_eval_batch_size=16,
    num_train_epochs=5,
    weight_decay=0.01,
    save_total_limit=2,
)

data_collator = DataCollatorForTokenClassification(tokenizer)

# 8. Trainer
trainer = Trainer(
    model=model,
    args=training_args,
    train_dataset=tokenized_dataset["train"],
    eval_dataset=tokenized_dataset["validation"],
    tokenizer=tokenizer,
    data_collator=data_collator,
    compute_metrics=compute_metrics,
    callbacks=[EarlyStoppingCallback(early_stopping_patience=3)]
)

# 9. Train and Save
trainer.train()
model.config.id2label = id_to_label
model.config.label2id = label_to_id
trainer.save_model("./pii_model_indicner")
tokenizer.save_pretrained("./pii_model_indicner")

# 10. Inference
from transformers import pipeline
ner_pipe = pipeline(
    "token-classification",
    model=model,
    tokenizer=tokenizer,
    aggregation_strategy=None
)

# 11. Test
text = (
    "My name is Ramesh Kumar and I live at 12 MG Road, Bangalore. "
    "You can contact me at 9876543210 or email me at ramesh.k@example.com. "
    "My date of birth is 15/08/1985. "
    "Here is my Aadhaar number: 1234-5678-9123."
)

output = ner_pipe(text)
for ent in output:
    print(f"{ent['word']} → {ent['entity']} ({ent['score']:.2f})")
